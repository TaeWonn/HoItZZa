/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.40
 * Generated at: 2019-05-28 00:00:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import user.model.vo.User;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/views/common/header.jsp", Long.valueOf(1559000911291L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("user.model.vo.User");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");

	User userLoggedIn=(User)request.getAttribute("useLoggedIn");



      out.write("\r\n");
      out.write("<!DOCTYPE html >\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/js/jquery-3.4.0.js\"></script>\r\n");
      out.write("<title>SellBar - Flea Market For U</title>\r\n");
      out.write("\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Gloria+Hallelujah&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css?family=Poor+Story&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/header.css\" />\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div id=\"head-container\">\r\n");
      out.write("\t\t<span id=\"sellBuy1\">Sell&Buy</span>&nbsp;<br />\r\n");
      out.write("\t\t<span id=\"sellBuy2\">우리들의 쎌빠</span>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<hr />\r\n");
      out.write("\r\n");
      out.write("\t<aside id=\"asideLeft\">\r\n");
      out.write("\t<section>\r\n");
      out.write("\t");
if(userLoggedIn==null){ 
      out.write("\r\n");
      out.write("\t<div id=\"login-container\">\r\n");
      out.write("\t\t<br />\r\n");
      out.write("\t\t<img src=\"");
      out.print(request.getContextPath() );
      out.write("/images/userId.svg\" class=\"inout\"><input type=\"text\" name=\"userId\" id=\"userId\" />\r\n");
      out.write("\t\t<br />\r\n");
      out.write("\t\t<img src=\"");
      out.print(request.getContextPath() );
      out.write("/images/pwd.svg\" class=\"inout\"><input type=\"password\" name=\"userPwd\" id=\"userPwd\" />\r\n");
      out.write("\t\t<br />\r\n");
      out.write("\t\t<button id=\"loginBtn\">Login</button>\r\n");
      out.write("\t\t<br />\r\n");
      out.write("\t\t<ul id=\"link\">\r\n");
      out.write("\t\t\t<li><a href=\"");
      out.print(request.getContextPath() );
      out.write("/views/user/userJoin\">회원가입</a></li>\r\n");
      out.write("\t\t\t<li><a href=\"");
      out.print(request.getContextPath() );
      out.write("/views/user/findId_pwd\">아이디/비밀번호 찾기</a></li>\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t");
}else{
      out.write("\r\n");
      out.write("\t\t<div id=\"login-container\">\r\n");
      out.write("\t\r\n");
      out.write("\t\t<span>admin님 안녕하세요!</span>\r\n");
      out.write("\t\t<img src=\"images/profile.png\" alt=\"\" id=\"user_profile_photo\" />\r\n");
      out.write("\t\t<ul id=\"link\">\r\n");
      out.write("\t\t\t<li><span><a href=\"");
      out.print(request.getContextPath() );
      out.write("/\">내쪽지함</a></span>\r\n");
      out.write("\t\t\t\t&nbsp;&nbsp;<span><a href=\"");
      out.print(request.getContextPath() );
      out.write("/\">내정보 보기</a></span>\r\n");
      out.write("\t\t\t</li>\r\n");
      out.write("\t\t\t<li><a href=\"");
      out.print(request.getContextPath() );
      out.write("/\">현재 포인트</a></li>\r\n");
      out.write("\t\t\t<li><a href=\"");
      out.print(request.getContextPath() );
      out.write("/\">로그아웃</a></li>\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t");
} 
      out.write("\r\n");
      out.write("\t<div id=\"board-list-container\">\r\n");
      out.write("\t\t<p id=\"board_title\">판매/구매</p>\r\n");
      out.write("\t\t<ul class=\"boardList\">\r\n");
      out.write("\t\t\t<li><a href=\"\">판매 게시판</a></li>\r\n");
      out.write("\t\t\t<li><a href=\"\">구매 게시판</a></li>\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t\t<p id=\"board_title\">자유게시판</p>\r\n");
      out.write("\t\t<ul class=\"boardList\">\r\n");
      out.write("\t\t\t<li><a href=\"\">잡담 게시판</a></li>\r\n");
      out.write("\t\t\t<li><a href=\"\">유용한 생활지식</a></li>\r\n");
      out.write("\t\t\t<li><a href=\"\">연예/미디어</a></li>\r\n");
      out.write("\t\t\t<li><a href=\"\">나눔 게시판</a></li>\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t\t<p id=\"board_title\">건의사항/신고</p>\r\n");
      out.write("\t\t<ul class=\"boardList\">\r\n");
      out.write("\t\t\t<li><a href=\"\">건의 게시판</a></li>\r\n");
      out.write("\t\t\t<li><a href=\"\">신고 게시판</a></li>\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t</section>\r\n");
      out.write("\t</aside>\r\n");
      out.write("\t\r\n");
      out.write("\t<aside id=\"asideRight\">\r\n");
      out.write("\t\t<section>\r\n");
      out.write("\t\t\t<div id=\"weather-day\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div id=\"ad1\" class=\"ad\">\r\n");
      out.write("\t\t\t\t<img src=\"");
      out.print(request.getContextPath() );
      out.write("/images/강사님.PNG\" alt=\"\" />\r\n");
      out.write("\t\t\t\t<span>지식을 원하는자</span>\r\n");
      out.write("\t\t\t\t<br /><span>나에게 오라</span>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div id=\"ad2\"class=\"ad\">\r\n");
      out.write("\t\t\t<img src=\"");
      out.print(request.getContextPath() );
      out.write("/images/강사님.PNG\" alt=\"\" />\r\n");
      out.write("\t\t\t<span>공부를 원하는자</span>\r\n");
      out.write("\t\t\t<br /><span>나에게 질문하라</span>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</section>\r\n");
      out.write("\t</aside>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("//날씨정보 api불러오기\r\n");
      out.write("$(function(){\r\n");
      out.write("\tconsole.log('sdfs');\r\n");
      out.write("\tvar location=\"Seoul\";\r\n");
      out.write("\tvar today = new Date();\r\n");
      out.write("\tvar dd = today.getDate();\r\n");
      out.write("\tvar mm = today.getMonth()+1; //January is 0!\r\n");
      out.write("\tvar yyyy = today.getFullYear();\r\n");
      out.write("\r\n");
      out.write("\tif(dd<10) {\r\n");
      out.write("\t    dd='0'+dd\r\n");
      out.write("\t} \r\n");
      out.write("\tif(mm<10) {\r\n");
      out.write("\t    mm='0'+mm\r\n");
      out.write("\t} \r\n");
      out.write("\t\r\n");
      out.write("\ttoday =yyyy+\"년\"+mm+\"월\"+dd+\"일\";\r\n");
      out.write("\tvar apiUrl=\"http://api.openweathermap.org/data/2.5/weather?q=Seoul&appid=d69250224a399641ef739b6e02e5cfaf\";\r\n");
      out.write("\t $.ajax({\r\n");
      out.write("            url: apiUrl,\r\n");
      out.write("            dataType: \"json\",\r\n");
      out.write("            type: \"GET\",\r\n");
      out.write("            async: \"false\",\r\n");
      out.write("            success: function(resp) {\r\n");
      out.write("\r\n");
      out.write("            var imgURL = \"http://openweathermap.org/img/w/\" + resp.weather[0].icon + \".png\";\r\n");
      out.write("\r\n");
      out.write("               var html='<span style=\"font-size:24px;\">'+today+'</span><div id=\"weather\"><img src=\"'+imgURL+'\" alt=\"\" /><span id=\"wSpan\">'+resp.weather[0].description+'</span><br /><span>현재위치 : '+resp.name+'</span><br />';\r\n");
      out.write("                \thtml+='<span>현재온도 : '+Math.round((resp.main.temp- 273.15)*10.0)/10.0+'°C</span><br /><span>현재습도 : '+resp.main.humidity+'</span><br />';\r\n");
      out.write("                \thtml+='<span>풍속 : '+resp.wind.speed+'</span></div>';\r\n");
      out.write("            \t $(\"#weather-day\").append(html);\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
